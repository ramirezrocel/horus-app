{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\n\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n\n  let nextFocus = index;\n\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  let nextIndexCandidate;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    const newIndex = previouslyHighlightedIndex + diff;\n\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\n\nfunction handleOptionSelection(option, state, props) {\n  const {\n    multiple,\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false\n  } = props;\n  const {\n    selectedValue\n  } = state;\n  const optionIndex = props.options.findIndex(o => props.optionComparer(option, o));\n\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n\n  if (multiple) {\n    var _ref, _ref2;\n\n    const selectedValues = (_ref = selectedValue) != null ? _ref : []; // if the option is already selected, remove it from the selection, otherwise add it\n\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\n\nfunction handleKeyDown(event, state, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n\n  const moveHighlight = (diff, direction, wrapAround) => {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\n  };\n\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n\n      return handleOptionSelection(state.highlightedValue, state, props);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\n\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\n  var _stringifyOption;\n\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n\n  return text.indexOf(searchString) === 0;\n};\n\nfunction handleTextNavigation(state, searchString, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer,\n    optionStringifier\n  } = props;\n\n  const moveHighlight = previouslyHighlightedOption => {\n    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, 'next', disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, !(disableListWrap != null ? disableListWrap : false), optionComparer);\n  };\n\n  const startWithCurrentOption = searchString.length > 1;\n  let nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue); // use `for` instead of `while` prevent infinite loop\n\n  for (let index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    } // Move to the next element.\n\n\n    nextOption = moveHighlight(nextOption);\n  } // No option match text search criteria\n\n\n  return state;\n}\n\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n\n  const {\n    multiple,\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n\n  if (multiple) {\n    var _ref3; // exclude selected values that are no longer in the options\n\n\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\n\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n\n    case ActionTypes.blur:\n      return handleBlur(state);\n\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/RRAMIREZ/Documents/REACT/master-1/socialMedia-main/socialMedia-app/node_modules/@mui/base/ListboxUnstyled/defaultListboxReducer.js"],"names":["_extends","ActionTypes","pageSize","findValidOptionToHighlight","index","lookupDirection","options","focusDisabled","isOptionDisabled","wrapAround","length","every","o","i","nextFocus","nextFocusDisabled","getNewHighlightedOption","previouslyHighlightedOption","diff","highlightDisabled","optionComparer","_options$nextIndex","maxIndex","defaultHighlightedIndex","nextIndexCandidate","previouslyHighlightedIndex","findIndex","option","_options$defaultHighl","newIndex","Math","abs","nextIndex","handleOptionSelection","state","props","multiple","v","selectedValue","optionIndex","_ref","_ref2","selectedValues","newSelectedValues","some","sv","filter","highlightedValue","handleKeyDown","event","disableListWrap","disabledItemsFocusable","moveHighlight","direction","key","handleBlur","textCriteriaMatches","searchString","stringifyOption","_stringifyOption","text","trim","toLowerCase","indexOf","handleTextNavigation","optionStringifier","startWithCurrentOption","nextOption","handleOptionsChange","previousOptions","_options$find","_options$find2","newHighlightedOption","find","_ref3","newSelectedValue","defaultListboxReducer","action","type","keyDown","optionClick","blur","setValue","value","setHighlight","highlight","textNavigation","optionsChange"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { ActionTypes } from './useListbox.types';\r\nconst pageSize = 5;\r\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\r\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\r\n    return -1;\r\n  }\r\n  let nextFocus = index;\r\n  for (;;) {\r\n    // No valid options found\r\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\r\n      return -1;\r\n    }\r\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\r\n    if (nextFocusDisabled) {\r\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\r\n      if (wrapAround) {\r\n        nextFocus = (nextFocus + options.length) % options.length;\r\n      }\r\n    } else {\r\n      return nextFocus;\r\n    }\r\n  }\r\n}\r\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\r\n  var _options$nextIndex;\r\n  const maxIndex = options.length - 1;\r\n  const defaultHighlightedIndex = -1;\r\n  let nextIndexCandidate;\r\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\r\n  if (diff === 'reset') {\r\n    var _options$defaultHighl;\r\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\r\n  }\r\n  if (diff === 'start') {\r\n    nextIndexCandidate = 0;\r\n  } else if (diff === 'end') {\r\n    nextIndexCandidate = maxIndex;\r\n  } else {\r\n    const newIndex = previouslyHighlightedIndex + diff;\r\n    if (newIndex < 0) {\r\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\r\n        nextIndexCandidate = 0;\r\n      } else {\r\n        nextIndexCandidate = maxIndex;\r\n      }\r\n    } else if (newIndex > maxIndex) {\r\n      if (!wrapAround || Math.abs(diff) > 1) {\r\n        nextIndexCandidate = maxIndex;\r\n      } else {\r\n        nextIndexCandidate = 0;\r\n      }\r\n    } else {\r\n      nextIndexCandidate = newIndex;\r\n    }\r\n  }\r\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\r\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\r\n}\r\nfunction handleOptionSelection(option, state, props) {\r\n  const {\r\n    multiple,\r\n    optionComparer = (o, v) => o === v,\r\n    isOptionDisabled = () => false\r\n  } = props;\r\n  const {\r\n    selectedValue\r\n  } = state;\r\n  const optionIndex = props.options.findIndex(o => props.optionComparer(option, o));\r\n  if (isOptionDisabled(option, optionIndex)) {\r\n    return state;\r\n  }\r\n  if (multiple) {\r\n    var _ref, _ref2;\r\n    const selectedValues = (_ref = selectedValue) != null ? _ref : [];\r\n    // if the option is already selected, remove it from the selection, otherwise add it\r\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\r\n    return {\r\n      selectedValue: newSelectedValues,\r\n      highlightedValue: option\r\n    };\r\n  }\r\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\r\n    return state;\r\n  }\r\n  return {\r\n    selectedValue: option,\r\n    highlightedValue: option\r\n  };\r\n}\r\nfunction handleKeyDown(event, state, props) {\r\n  const {\r\n    options,\r\n    isOptionDisabled,\r\n    disableListWrap,\r\n    disabledItemsFocusable,\r\n    optionComparer\r\n  } = props;\r\n  const moveHighlight = (diff, direction, wrapAround) => {\r\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\r\n  };\r\n  switch (event.key) {\r\n    case 'Home':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight('start', 'next', false)\r\n      });\r\n    case 'End':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight('end', 'previous', false)\r\n      });\r\n    case 'PageUp':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\r\n      });\r\n    case 'PageDown':\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(pageSize, 'next', false)\r\n      });\r\n    case 'ArrowUp':\r\n      // TODO: extend current selection with Shift modifier\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\r\n      });\r\n    case 'ArrowDown':\r\n      // TODO: extend current selection with Shift modifier\r\n      return _extends({}, state, {\r\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\r\n      });\r\n    case 'Enter':\r\n    case ' ':\r\n      if (state.highlightedValue === null) {\r\n        return state;\r\n      }\r\n      return handleOptionSelection(state.highlightedValue, state, props);\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\nfunction handleBlur(state) {\r\n  return _extends({}, state, {\r\n    highlightedValue: null\r\n  });\r\n}\r\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\r\n  var _stringifyOption;\r\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\r\n  if (!text || text.length === 0) {\r\n    // Make option not navigable if stringification fails or results in empty string.\r\n    return false;\r\n  }\r\n  return text.indexOf(searchString) === 0;\r\n};\r\nfunction handleTextNavigation(state, searchString, props) {\r\n  const {\r\n    options,\r\n    isOptionDisabled,\r\n    disableListWrap,\r\n    disabledItemsFocusable,\r\n    optionComparer,\r\n    optionStringifier\r\n  } = props;\r\n  const moveHighlight = previouslyHighlightedOption => {\r\n    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, 'next', disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, !(disableListWrap != null ? disableListWrap : false), optionComparer);\r\n  };\r\n  const startWithCurrentOption = searchString.length > 1;\r\n  let nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue);\r\n\r\n  // use `for` instead of `while` prevent infinite loop\r\n  for (let index = 0; index < options.length; index += 1) {\r\n    // Return un-mutated state if looped back to the currently highlighted value\r\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\r\n      return state;\r\n    }\r\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\r\n      // The nextOption is the element to be highlighted\r\n      return _extends({}, state, {\r\n        highlightedValue: nextOption\r\n      });\r\n    }\r\n    // Move to the next element.\r\n    nextOption = moveHighlight(nextOption);\r\n  }\r\n\r\n  // No option match text search criteria\r\n  return state;\r\n}\r\nfunction handleOptionsChange(options, previousOptions, state, props) {\r\n  var _options$find, _options$find2;\r\n  const {\r\n    multiple,\r\n    optionComparer\r\n  } = props;\r\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\r\n  if (multiple) {\r\n    var _ref3;\r\n    // exclude selected values that are no longer in the options\r\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\r\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\r\n    return {\r\n      highlightedValue: newHighlightedOption,\r\n      selectedValue: newSelectedValues\r\n    };\r\n  }\r\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\r\n  return {\r\n    highlightedValue: newHighlightedOption,\r\n    selectedValue: newSelectedValue\r\n  };\r\n}\r\nexport default function defaultListboxReducer(state, action) {\r\n  const {\r\n    type\r\n  } = action;\r\n  switch (type) {\r\n    case ActionTypes.keyDown:\r\n      return handleKeyDown(action.event, state, action.props);\r\n    case ActionTypes.optionClick:\r\n      return handleOptionSelection(action.option, state, action.props);\r\n    case ActionTypes.blur:\r\n      return handleBlur(state);\r\n    case ActionTypes.setValue:\r\n      return _extends({}, state, {\r\n        selectedValue: action.value\r\n      });\r\n    case ActionTypes.setHighlight:\r\n      return _extends({}, state, {\r\n        highlightedValue: action.highlight\r\n      });\r\n    case ActionTypes.textNavigation:\r\n      return handleTextNavigation(state, action.searchString, action.props);\r\n    case ActionTypes.optionsChange:\r\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}