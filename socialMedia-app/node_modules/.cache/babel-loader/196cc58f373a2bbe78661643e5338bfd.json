{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RRAMIREZ\\\\Documents\\\\REACT\\\\master-1\\\\socialMedia-main\\\\socialMedia-app\\\\src\\\\pages\\\\postDetails\\\\PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../../components/share/share.scss\";\nimport Image from \"../../assets/add-image.png\";\nimport * as authService from \"../../services/auth\";\nimport * as postService from \"../../services/post\";\nimport * as userService from \"../../services/user\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Joi from \"joi\";\nimport \"../home/home.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  _s();\n\n  let {\n    post,\n    initialValue\n  } = _ref;\n  const currentUser = authService.getCurrentUser();\n  const navigate = useNavigate();\n  const params = useParams();\n  /* set form content or input value */\n\n  const [form, setForm] = useState(initialValue || {\n    value: \"\",\n    id: params.id,\n    postImageURL: \"\"\n  });\n  useEffect(() => {\n    postService.fetchPostById(params.id).then(response => {\n      setForm(response.data);\n    });\n  }, []);\n  const [errors, setErrors] = useState({});\n  /*form validation */\n\n  const schema = Joi.object({\n    value: Joi.string().required(),\n    postImageURL: Joi.string().allow(\"\").optional()\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await postService.updatePost(form.value, form.postImageURL, form.id);\n      alert(\"Post Updated Successfully\");\n      console.log(response); // alert(response);\n\n      navigate(\"/\");\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        alert(error.response.data.message);\n      }\n    }\n  };\n  /**\r\n   * handle every event\r\n   * set form input values\r\n   * set errors to form\r\n   */\n\n\n  const handleChange = _ref2 => {\n    let {\n      currentTarget: input\n    } = _ref2;\n    setForm({ ...form,\n      [input.name]: input.value\n    });\n    const {\n      error\n    } = schema.extract(input.name).label(input.name).validate(input.value);\n\n    if (error) {\n      setErrors({ ...errors,\n        [input.name]: error.details[0].message\n      });\n    } else {\n      delete errors[input.name];\n      setErrors(errors);\n    }\n  };\n  /* button disabled = true or false */\n\n\n  const isFormInvalid = () => {\n    const result = schema.validate(form);\n    return !!result.error;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentUser.imageUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"value\",\n              error: !!errors.value,\n              helperText: errors.value,\n              onChange: handleChange,\n              value: form.value,\n              type: \"text\",\n              label: \"Post\",\n              placeholder: `What's on your mind ${currentUser.name}?`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"postImageURL\",\n                error: !!errors.postImageURL,\n                helperText: errors.postImageURL,\n                onChange: handleChange,\n                value: form.postImageURL,\n                label: \"Post\",\n                placeholder: `What's on your mind ${currentUser.name}?`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Image,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"SWXu5G1bD3zzvx7xYKDr1hIKkEY=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/RRAMIREZ/Documents/REACT/master-1/socialMedia-main/socialMedia-app/src/pages/postDetails/PostForm.jsx"],"names":["Image","authService","postService","userService","React","useState","useEffect","useNavigate","useParams","Joi","PostForm","post","initialValue","currentUser","getCurrentUser","navigate","params","form","setForm","value","id","postImageURL","fetchPostById","then","response","data","errors","setErrors","schema","object","string","required","allow","optional","handleSubmit","event","preventDefault","updatePost","alert","console","log","error","status","message","handleChange","currentTarget","input","name","extract","label","validate","details","isFormInvalid","result","imageUrl"],"mappings":"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","sourcesContent":["import \"../../components/share/share.scss\";\r\nimport Image from \"../../assets/add-image.png\";\r\nimport * as authService from \"../../services/auth\";\r\nimport * as postService from \"../../services/post\";\r\nimport * as userService from \"../../services/user\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Joi from \"joi\";\r\nimport \"../home/home.scss\";\r\n\r\nconst PostForm = ({ post, initialValue }) => {\r\n  const currentUser = authService.getCurrentUser();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  /* set form content or input value */\r\n  const [form, setForm] = useState(\r\n    initialValue || {\r\n      value: \"\",\r\n      id: params.id,\r\n      postImageURL: \"\",\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    postService.fetchPostById(params.id).then((response) => {\r\n      setForm(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  /*form validation */\r\n  const schema = Joi.object({\r\n    value: Joi.string().required(),\r\n    postImageURL: Joi.string().allow(\"\").optional(),\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await postService.updatePost(\r\n        form.value,\r\n        form.postImageURL,\r\n        form.id\r\n      );\r\n      alert(\"Post Updated Successfully\");\r\n      console.log(response);\r\n      // alert(response);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        alert(error.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * handle every event\r\n   * set form input values\r\n   * set errors to form\r\n   */\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    setForm({\r\n      ...form,\r\n      [input.name]: input.value,\r\n    });\r\n\r\n    const { error } = schema\r\n      .extract(input.name)\r\n      .label(input.name)\r\n      .validate(input.value);\r\n\r\n    if (error) {\r\n      setErrors({ ...errors, [input.name]: error.details[0].message });\r\n    } else {\r\n      delete errors[input.name];\r\n      setErrors(errors);\r\n    }\r\n  };\r\n\r\n  /* button disabled = true or false */\r\n  const isFormInvalid = () => {\r\n    const result = schema.validate(form);\r\n    return !!result.error;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"share\">\r\n          <div className=\"container\">\r\n            <div className=\"top\">\r\n              <img src={currentUser.imageUrl} alt=\"\" />\r\n              <input\r\n                name=\"value\"\r\n                error={!!errors.value}\r\n                helperText={errors.value}\r\n                onChange={handleChange}\r\n                value={form.value}\r\n                type=\"text\"\r\n                label=\"Post\"\r\n                placeholder={`What's on your mind ${currentUser.name}?`}\r\n              />\r\n            </div>\r\n            <hr />\r\n            <div className=\"bottom\">\r\n              <div className=\"left\">\r\n                <input\r\n                  name=\"postImageURL\"\r\n                  error={!!errors.postImageURL}\r\n                  helperText={errors.postImageURL}\r\n                  onChange={handleChange}\r\n                  value={form.postImageURL}\r\n                  label=\"Post\"\r\n                  placeholder={`What's on your mind ${currentUser.name}?`}\r\n                />\r\n\r\n                <div className=\"item\">\r\n                  <img src={Image} alt=\"\" />\r\n                  <span>Add Image</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"right\">\r\n                <button type=\"submit\">Share</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}