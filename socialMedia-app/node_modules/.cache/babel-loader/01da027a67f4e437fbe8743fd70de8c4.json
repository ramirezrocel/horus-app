{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RRAMIREZ\\\\Documents\\\\REACT\\\\master-1\\\\socialMedia-main\\\\socialMedia-app\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as authService from \"../../services/auth\";\nimport Joi from \"joi\"; // const joi = require(\"joi\");\n\nimport \"./register.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const joi = require(\"joi\");\n\n  const {\n    joiPasswordExtendCore\n  } = require(\"joi-password\");\n\n  const joiPassword = joi.extend(joiPasswordExtendCore);\n  const navigate = useNavigate();\n  /* set form content or input value */\n\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    imageUrl: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  /*form validation */\n\n  const schema = Joi.object({\n    imageUrl: Joi.string().allow(\"\").optional(),\n    email: Joi.string().required(),\n    name: Joi.string().required(),\n    username: Joi.string().required(),\n    password: joiPassword.string().required().minOfSpecialCharacters(1).minOfLowercase(1).minOfUppercase(1).minOfNumeric(1).noWhiteSpaces().messages({\n      \"password.minOfUppercase\": \"{#label} should contain at least {#min} uppercase character\",\n      \"password.minOfSpecialCharacters\": \"{#label} should contain at least {#min} special character\",\n      \"password.minOfLowercase\": \"{#label} should contain at least {#min} lowercase character\",\n      \"password.minOfNumeric\": \"{#label} should contain at least {#min} numeric character\",\n      \"password.noWhiteSpaces\": \"{#label} should not contain white spaces\"\n    })\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await authService.register(form.name, form.email, form.username, form.password, form.imageUrl);\n      alert(\"Registration successful\");\n      navigate(\"/login\");\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        alert(error.response.data.message);\n      }\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      currentTarget: input\n    } = _ref;\n    setForm({ ...form,\n      [input.name]: input.value\n    });\n    const {\n      error\n    } = schema.extract(input.name).label(input.name).validate(input.value);\n\n    if (error) {\n      setErrors({ ...errors,\n        [input.name]: error.details[0].message\n      });\n    } else {\n      delete errors[input.name];\n      setErrors(errors);\n    }\n  };\n\n  const isFormInvalid = _ref2 => {\n    let {\n      currentTarget: input\n    } = _ref2;\n    const result = schema.validate(form); // setForm({\n    //   ...form,\n    //   [input.name]: input.value,\n    // });\n\n    setErrors({ ...errors,\n      [input.name]: error.details[0].message\n    }); // return !!result.error;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"HORUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Best Playing Game Today.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Games always believe that an epic win is possible and that it\\u2019s always worth trying and trying now.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Do you have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          action: \"\",\n          method: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 100 + \"%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"name\",\n              onChange: handleChange,\n              value: form.name,\n              type: \"text\",\n              placeholder: \"Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: [errors.name, \"error = \", !!errors.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              onChange: handleChange,\n              value: form.email,\n              type: \"email\",\n              placeholder: \"Email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              onChange: handleChange,\n              value: form.username,\n              type: \"text\",\n              placeholder: \"Username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              onChange: handleChange,\n              value: form.password,\n              type: \"password\",\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: [errors.password, !!errors.password]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Profile \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"(Optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"imageUrl\",\n              onChange: handleChange,\n              value: form.imageUrl,\n              type: \"text\",\n              placeholder: \"Image Url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-error\",\n              children: errors.imageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: isFormInvalid(),\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"kadkelsqf7hWmHO2rNNAqHXNIcc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/RRAMIREZ/Documents/REACT/master-1/socialMedia-main/socialMedia-app/src/pages/register/Register.jsx"],"names":["Link","useNavigate","useState","authService","Joi","Register","joi","require","joiPasswordExtendCore","joiPassword","extend","navigate","form","setForm","name","email","username","imageUrl","password","errors","setErrors","schema","object","string","allow","optional","required","minOfSpecialCharacters","minOfLowercase","minOfUppercase","minOfNumeric","noWhiteSpaces","messages","handleSubmit","event","preventDefault","response","register","alert","error","status","data","message","handleChange","currentTarget","input","value","extract","label","validate","details","isFormInvalid","result","width"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AACA,OAAOC,GAAP,MAAgB,KAAhB,C,CACA;;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAA4BD,OAAO,CAAC,cAAD,CAAzC;;AACA,QAAME,WAAW,GAAGH,GAAG,CAACI,MAAJ,CAAWF,qBAAX,CAApB;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEA;;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAC/BY,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,QAAQ,EAAE,EAJqB;AAK/BC,IAAAA,QAAQ,EAAE;AALqB,GAAD,CAAhC;AAQA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEA;;AACA,QAAMmB,MAAM,GAAGjB,GAAG,CAACkB,MAAJ,CAAW;AACxBL,IAAAA,QAAQ,EAAEb,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB,EAAnB,EAAuBC,QAAvB,EADc;AAExBV,IAAAA,KAAK,EAAEX,GAAG,CAACmB,MAAJ,GAAaG,QAAb,EAFiB;AAGxBZ,IAAAA,IAAI,EAAEV,GAAG,CAACmB,MAAJ,GAAaG,QAAb,EAHkB;AAIxBV,IAAAA,QAAQ,EAAEZ,GAAG,CAACmB,MAAJ,GAAaG,QAAb,EAJc;AAKxBR,IAAAA,QAAQ,EAAET,WAAW,CAClBc,MADO,GAEPG,QAFO,GAGPC,sBAHO,CAGgB,CAHhB,EAIPC,cAJO,CAIQ,CAJR,EAKPC,cALO,CAKQ,CALR,EAMPC,YANO,CAMM,CANN,EAOPC,aAPO,GAQPC,QARO,CAQE;AACR,iCACE,6DAFM;AAGR,yCACE,2DAJM;AAKR,iCACE,6DANM;AAOR,+BACE,2DARM;AASR,gCAA0B;AATlB,KARF;AALc,GAAX,CAAf;;AA0BA,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMjC,WAAW,CAACkC,QAAZ,CACrBzB,IAAI,CAACE,IADgB,EAErBF,IAAI,CAACG,KAFgB,EAGrBH,IAAI,CAACI,QAHgB,EAIrBJ,IAAI,CAACM,QAJgB,EAKrBN,IAAI,CAACK,QALgB,CAAvB;AAOAqB,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACA3B,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,KAVD,CAUE,OAAO4B,KAAP,EAAc;AACd,UAAIA,KAAK,CAACH,QAAN,IAAkBG,KAAK,CAACH,QAAN,CAAeI,MAAf,KAA0B,GAAhD,EAAqD;AACnDF,QAAAA,KAAK,CAACC,KAAK,CAACH,QAAN,CAAeK,IAAf,CAAoBC,OAArB,CAAL;AACD;AACF;AACF,GAjBD;;AAmBA,QAAMC,YAAY,GAAG,QAA8B;AAAA,QAA7B;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAA6B;AACjDhC,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACiC,KAAK,CAAC/B,IAAP,GAAc+B,KAAK,CAACC;AAFd,KAAD,CAAP;AAKA,UAAM;AAAEP,MAAAA;AAAF,QAAYlB,MAAM,CACrB0B,OADe,CACPF,KAAK,CAAC/B,IADC,EAEfkC,KAFe,CAETH,KAAK,CAAC/B,IAFG,EAGfmC,QAHe,CAGNJ,KAAK,CAACC,KAHA,CAAlB;;AAKA,QAAIP,KAAJ,EAAW;AACTnB,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,SAAC0B,KAAK,CAAC/B,IAAP,GAAcyB,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiBR;AAA5C,OAAD,CAAT;AACD,KAFD,MAEO;AACL,aAAOvB,MAAM,CAAC0B,KAAK,CAAC/B,IAAP,CAAb;AACAM,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,GAjBD;;AAmBA,QAAMgC,aAAa,GAAG,SAA8B;AAAA,QAA7B;AAAEP,MAAAA,aAAa,EAAEC;AAAjB,KAA6B;AAClD,UAAMO,MAAM,GAAG/B,MAAM,CAAC4B,QAAP,CAAgBrC,IAAhB,CAAf,CADkD,CAElD;AACA;AACA;AACA;;AACAQ,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAAC0B,KAAK,CAAC/B,IAAP,GAAcyB,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiBR;AAA5C,KAAD,CAAT,CANkD,CAOlD;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,QAAQ,EAAET,YAAhB;AAA8B,UAAA,MAAM,EAAC,EAArC;AAAwC,UAAA,MAAM,EAAC,EAA/C;AAAA,kCACE;AAAK,YAAA,KAAK,EAAE;AAAEoB,cAAAA,KAAK,EAAE,MAAM;AAAf,aAAZ;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,QAAQ,EAAEV,YAFZ;AAGE,cAAA,KAAK,EAAE/B,IAAI,CAACE,IAHd;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,WAAW,EAAC,MALd;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,yBACGK,MAAM,CAACL,IADV,cAEW,CAAC,CAACK,MAAM,CAACL,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,QAAQ,EAAE6B,YAFZ;AAGE,cAAA,KAAK,EAAE/B,IAAI,CAACG,KAHd;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,WAAW,EAAC,OALd;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,wBAA2BI,MAAM,CAACJ;AAAlC;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eA0BE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,QAAQ,EAAE4B,YAFZ;AAGE,cAAA,KAAK,EAAE/B,IAAI,CAACI,QAHd;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,WAAW,EAAC,UALd;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,wBAA2BG,MAAM,CAACH;AAAlC;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,eAqCE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,QAAQ,EAAE2B,YAFZ;AAGE,cAAA,KAAK,EAAE/B,IAAI,CAACM,QAHd;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,WAAW,EAAC,UALd;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,yBACGC,MAAM,CAACD,QADV,EAEG,CAAC,CAACC,MAAM,CAACD,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCF,eAmDE;AAAA,oCACE;AAAA,qCACE;AAAA,oDACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,QAAQ,EAAEyB,YAFZ;AAGE,cAAA,KAAK,EAAE/B,IAAI,CAACK,QAHd;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,oBANF,eAaE;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,wBAA2BE,MAAM,CAACF;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnDF,eAmEE;AAAQ,YAAA,QAAQ,EAAEkC,aAAa,EAA/B;AAAmC,YAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD,CA1LD;;GAAM9C,Q;UAIaJ,W;;;KAJbI,Q;AA4LN,eAAeA,QAAf","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport * as authService from \"../../services/auth\";\r\nimport Joi from \"joi\";\r\n// const joi = require(\"joi\");\r\n\r\nimport \"./register.scss\";\r\n\r\nconst Register = () => {\r\n  const joi = require(\"joi\");\r\n  const { joiPasswordExtendCore } = require(\"joi-password\");\r\n  const joiPassword = joi.extend(joiPasswordExtendCore);\r\n  const navigate = useNavigate();\r\n\r\n  /* set form content or input value */\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    imageUrl: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  /*form validation */\r\n  const schema = Joi.object({\r\n    imageUrl: Joi.string().allow(\"\").optional(),\r\n    email: Joi.string().required(),\r\n    name: Joi.string().required(),\r\n    username: Joi.string().required(),\r\n    password: joiPassword\r\n      .string()\r\n      .required()\r\n      .minOfSpecialCharacters(1)\r\n      .minOfLowercase(1)\r\n      .minOfUppercase(1)\r\n      .minOfNumeric(1)\r\n      .noWhiteSpaces()\r\n      .messages({\r\n        \"password.minOfUppercase\":\r\n          \"{#label} should contain at least {#min} uppercase character\",\r\n        \"password.minOfSpecialCharacters\":\r\n          \"{#label} should contain at least {#min} special character\",\r\n        \"password.minOfLowercase\":\r\n          \"{#label} should contain at least {#min} lowercase character\",\r\n        \"password.minOfNumeric\":\r\n          \"{#label} should contain at least {#min} numeric character\",\r\n        \"password.noWhiteSpaces\": \"{#label} should not contain white spaces\",\r\n      }),\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await authService.register(\r\n        form.name,\r\n        form.email,\r\n        form.username,\r\n        form.password,\r\n        form.imageUrl\r\n      );\r\n      alert(\"Registration successful\");\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        alert(error.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    setForm({\r\n      ...form,\r\n      [input.name]: input.value,\r\n    });\r\n\r\n    const { error } = schema\r\n      .extract(input.name)\r\n      .label(input.name)\r\n      .validate(input.value);\r\n\r\n    if (error) {\r\n      setErrors({ ...errors, [input.name]: error.details[0].message });\r\n    } else {\r\n      delete errors[input.name];\r\n      setErrors(errors);\r\n    }\r\n  };\r\n\r\n  const isFormInvalid = ({ currentTarget: input }) => {\r\n    const result = schema.validate(form);\r\n    // setForm({\r\n    //   ...form,\r\n    //   [input.name]: input.value,\r\n    // });\r\n    setErrors({ ...errors, [input.name]: error.details[0].message });\r\n    // return !!result.error;\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"card\">\r\n        <div className=\"left\">\r\n          <h1>HORUS</h1>\r\n          <h2>Best Playing Game Today.</h2>\r\n          <p>\r\n            Games always believe that an epic win is possible and that it’s\r\n            always worth trying and trying now.\r\n          </p>\r\n          <span>Do you have an account?</span>\r\n          <Link to=\"/login\">\r\n            <button>Login</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"register-header\">\r\n            <h1>Register</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit} action=\"\" method=\"\">\r\n            <div style={{ width: 100 + \"%\" }}>\r\n              <input\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                value={form.name}\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                required\r\n              />\r\n              <p className=\"text-error\">\r\n                {errors.name}\r\n                error = {!!errors.name}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <input\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                value={form.email}\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n              />\r\n              <p className=\"text-error\">{errors.email}</p>\r\n            </div>\r\n            <div>\r\n              <input\r\n                name=\"username\"\r\n                onChange={handleChange}\r\n                value={form.username}\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                required\r\n              />\r\n              <p className=\"text-error\">{errors.username}</p>\r\n            </div>\r\n            <div>\r\n              <input\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                value={form.password}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n              <p className=\"text-error\">\r\n                {errors.password}\r\n                {!!errors.password}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <small>\r\n                  Profile <i>(Optional)</i>\r\n                </small>\r\n              </label>\r\n              <input\r\n                name=\"imageUrl\"\r\n                onChange={handleChange}\r\n                value={form.imageUrl}\r\n                type=\"text\"\r\n                placeholder=\"Image Url\"\r\n              />\r\n              <p className=\"text-error\">{errors.imageUrl}</p>\r\n            </div>\r\n\r\n            <button disabled={isFormInvalid()} type=\"submit\">\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}