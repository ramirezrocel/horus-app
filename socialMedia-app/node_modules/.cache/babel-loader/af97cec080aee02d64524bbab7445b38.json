{"ast":null,"code":"import axios from \"axios\";\nconst http = axios.create({\n  baseURL: \"http://localhost:3001/api\"\n});\nhttp.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"inside interceptor\"); // console.log;\n\n    alert(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\nhttp.interceptors.request.use(request => {\n  const accessToken = localStorage.getItem(\"accessToken\");\n\n  if (accessToken) {\n    request.headers = {\n      Authorization: `Bearer ${accessToken}`\n    };\n  }\n\n  return request;\n});\nexport default http;","map":{"version":3,"sources":["C:/Users/RRAMIREZ/Documents/REACT/socialMedia-main/socialMedia-app/src/services/http.js"],"names":["axios","http","create","baseURL","interceptors","response","use","error","expectedError","status","console","log","alert","Promise","reject","request","accessToken","localStorage","getItem","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAE;AADe,CAAb,CAAb;AAIAF,IAAI,CAACG,YAAL,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,IAA/B,EAAsCC,KAAD,IAAW;AAC9C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAKA,MAAI,CAACD,aAAL,EAAoB;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADkB,CAElB;;AACAC,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;;AAED,SAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACD,CAbD;AAeAN,IAAI,CAACG,YAAL,CAAkBW,OAAlB,CAA0BT,GAA1B,CAA+BS,OAAD,IAAa;AACzC,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;;AACA,MAAIF,WAAJ,EAAiB;AACfD,IAAAA,OAAO,CAACI,OAAR,GAAkB;AAAEC,MAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,KAAlB;AACD;;AACD,SAAOD,OAAP;AACD,CAND;AAQA,eAAed,IAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst http = axios.create({\r\n  baseURL: \"http://localhost:3001/api\",\r\n});\r\n\r\nhttp.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"inside interceptor\");\r\n    // console.log;\r\n    alert(\"An unexpected error occurred\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nhttp.interceptors.request.use((request) => {\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  if (accessToken) {\r\n    request.headers = { Authorization: `Bearer ${accessToken}` };\r\n  }\r\n  return request;\r\n});\r\n\r\nexport default http;\r\n"]},"metadata":{},"sourceType":"module"}