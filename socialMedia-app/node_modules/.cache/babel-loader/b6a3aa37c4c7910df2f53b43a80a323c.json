{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AGOMEZ\\\\OneDrive\\\\Documents\\\\GitHub\\\\horus-app\\\\socialMedia-app\\\\src\\\\pages\\\\postDetails\\\\EditPost.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../../components/post/Post\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as userService from \"../../services/user\";\nimport * as postService from \"../../services/post\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport Joi from \"joi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    post,\n    currentUser\n  } = _ref;\n  const [commentOpen, setCommentOpen] = useState(true);\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n  const [comments, setComments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [errors, setErrors] = useState({}); //TEMPORARY\n\n  const liked = false;\n  const schema = Joi.object({\n    value: Joi.string().required(),\n    postId: Joi.string().required()\n  });\n  const [form, setForm] = useState({\n    value: \"\",\n    postId: post.id\n  });\n\n  const getImage = id => {\n    const data = users.find(user => user.id === id);\n    return data[\"imageUrl\"];\n  };\n\n  const getUsername = id => {\n    const data = users.find(user => user.id === id);\n    return data[\"username\"];\n  };\n\n  useEffect(() => {\n    userService.fetchUser(post.userId).then(response => {\n      setUser(response.data);\n    });\n    postService.fetchCommentsByPost(post.id).then(response => {\n      setComments(response.data);\n    });\n    userService.fetchUsers().then(response => {\n      setUsers(response.data);\n    });\n  }, []);\n\n  const isUser = () => {\n    if (post.userId === currentUser.id) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/editPost/${post.id}`,\n          style: {\n            textDecoration: \"none\",\n            color: \"inherit\"\n          },\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {\n          color: \"inherit\",\n          onClick: () => handleDeletePost(post.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  const handleDeletePost = async id => {\n    try {\n      await postService.deletePost(id);\n      navigate(\"/\");\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        alert(\"Data might have already been deleted\");\n      }\n    }\n  };\n\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (form.id) {\n        postService.updateComment(form.postId, form.id, form.value).then(response => {\n          postService.fetchCommentsByPost(post.id).then(response => {\n            setComments(response.data);\n            setForm({ ...form,\n              id: \"\",\n              value: \"\"\n            });\n          });\n        });\n      } else {\n        await postService.addComment(form.postId, form.value);\n        postService.fetchCommentsByPost(post.id).then(response => {\n          setComments(response.data);\n        });\n      }\n\n      getNumberOfComments();\n      setForm({ ...form,\n        value: \"\"\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        alert(error.response.data.message);\n      }\n    }\n  };\n\n  const handleChange = _ref2 => {\n    let {\n      currentTarget: input\n    } = _ref2;\n    setForm({ ...form,\n      [input.name]: input.value\n    });\n    const {\n      error\n    } = schema.extract(input.name).label(input.name).validate(input.value);\n\n    if (error) {\n      setErrors({ ...errors,\n        [input.name]: error.details[0].message\n      });\n    } else {\n      delete errors[input.name];\n      setErrors(errors);\n    }\n  };\n\n  const getNumberOfComments = () => {\n    if (comments.length > 1) {\n      return `${comments.length} Comments`;\n    } else if (comments.length == 1) {\n      return `${comments.length} Comment`;\n    } else {\n      return \"Comment\";\n    }\n  };\n\n  const handleCommentDelete = async (id, commentId) => {\n    try {\n      await postService.deleteComment(id, commentId).then(response => {\n        postService.fetchCommentsByPost(post.id).then(response => {\n          setComments(response.data);\n        });\n        getNumberOfComments();\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        alert(\"Data might have already been deleted\");\n      }\n    }\n  };\n\n  const editComment = async (id, commentValue) => {\n    setForm({ ...form,\n      value: commentValue,\n      id: id\n    });\n  };\n\n  const isUserComment = (userId, postId, commentId, commentValue) => {\n    if (userId === currentUser.id) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"edit-ms\",\n          onClick: () => editComment(commentId, commentValue),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          \"aria-disabled\": \"true\",\n          className: \"delete-ms\",\n          onClick: () => handleCommentDelete(postId, commentId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }; // console.log(username);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.imageUrl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.userId}`,\n              style: {\n                textDecoration: \"none\",\n                color: \"inherit\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isUser()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.postImageURL,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [liked ? /*#__PURE__*/_jsxDEV(FavoriteOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 49\n          }, this), 12, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          onClick: () => setCommentOpen(!commentOpen),\n          children: [/*#__PURE__*/_jsxDEV(TextsmsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), getNumberOfComments()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(ShareOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), \"Share\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), commentOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCommentSubmit,\n            className: \"write\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentUser.imageUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"postId\",\n              onChange: handleChange,\n              value: form.postId,\n              type: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"value\",\n              onChange: handleChange,\n              value: form.value,\n              type: \"text\",\n              placeholder: \"write a comment\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), form.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"id\",\n                onChange: handleChange,\n                value: form.id,\n                type: \"hidden\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getImage(comment.userId),\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: getUsername(comment.userId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"edit-delete\",\n                children: isUserComment(comment.userId, comment.postId, comment.id, comment.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"FuZYFIsaZWgcLvEXPTN3uMmdRV4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["C:/Users/AGOMEZ/OneDrive/Documents/GitHub/horus-app/socialMedia-app/src/pages/postDetails/EditPost.jsx"],"names":["FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","TextsmsOutlinedIcon","ShareOutlinedIcon","DeleteOutlinedIcon","Link","useEffect","useState","useNavigate","userService","postService","EditIcon","Joi","EditPost","post","currentUser","commentOpen","setCommentOpen","user","setUser","navigate","comments","setComments","users","setUsers","errors","setErrors","liked","schema","object","value","string","required","postId","form","setForm","id","getImage","data","find","getUsername","fetchUser","userId","then","response","fetchCommentsByPost","fetchUsers","isUser","textDecoration","color","handleDeletePost","deletePost","error","status","alert","handleCommentSubmit","event","preventDefault","updateComment","addComment","getNumberOfComments","message","handleChange","currentTarget","input","name","extract","label","validate","details","length","handleCommentDelete","commentId","deleteComment","editComment","commentValue","isUserComment","imageUrl","username","postImageURL","map","comment"],"mappings":"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","sourcesContent":["import \"../../components/post/Post\";\r\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\r\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\r\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\r\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\r\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as userService from \"../../services/user\";\r\nimport * as postService from \"../../services/post\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Joi from \"joi\";\r\n\r\nconst EditPost = ({ post, currentUser }) => {\r\n  const [commentOpen, setCommentOpen] = useState(true);\r\n  const [user, setUser] = useState({});\r\n  const navigate = useNavigate();\r\n  const [comments, setComments] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  //TEMPORARY\r\n  const liked = false;\r\n\r\n  const schema = Joi.object({\r\n    value: Joi.string().required(),\r\n    postId: Joi.string().required(),\r\n  });\r\n\r\n  const [form, setForm] = useState({\r\n    value: \"\",\r\n    postId: post.id,\r\n  });\r\n\r\n  const getImage = (id) => {\r\n    const data = users.find((user) => user.id === id);\r\n    return data[\"imageUrl\"];\r\n  };\r\n\r\n  const getUsername = (id) => {\r\n    const data = users.find((user) => user.id === id);\r\n    return data[\"username\"];\r\n  };\r\n\r\n  useEffect(() => {\r\n    userService.fetchUser(post.userId).then((response) => {\r\n      setUser(response.data);\r\n    });\r\n\r\n    postService.fetchCommentsByPost(post.id).then((response) => {\r\n      setComments(response.data);\r\n    });\r\n\r\n    userService.fetchUsers().then((response) => {\r\n      setUsers(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const isUser = () => {\r\n    if (post.userId === currentUser.id) {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/editPost/${post.id}`}\r\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          >\r\n            <EditIcon />\r\n          </Link>\r\n\r\n          <DeleteOutlinedIcon\r\n            color=\"inherit\"\r\n            onClick={() => handleDeletePost(post.id)}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async (id) => {\r\n    try {\r\n      await postService.deletePost(id);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        alert(\"Data might have already been deleted\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (form.id) {\r\n        postService\r\n          .updateComment(form.postId, form.id, form.value)\r\n          .then((response) => {\r\n            postService.fetchCommentsByPost(post.id).then((response) => {\r\n              setComments(response.data);\r\n              setForm({\r\n                ...form,\r\n                id: \"\",\r\n                value: \"\",\r\n              });\r\n            });\r\n          });\r\n      } else {\r\n        await postService.addComment(form.postId, form.value);\r\n        postService.fetchCommentsByPost(post.id).then((response) => {\r\n          setComments(response.data);\r\n        });\r\n      }\r\n      getNumberOfComments();\r\n      setForm({\r\n        ...form,\r\n        value: \"\",\r\n      });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        alert(error.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    setForm({\r\n      ...form,\r\n      [input.name]: input.value,\r\n    });\r\n\r\n    const { error } = schema\r\n      .extract(input.name)\r\n      .label(input.name)\r\n      .validate(input.value);\r\n\r\n    if (error) {\r\n      setErrors({ ...errors, [input.name]: error.details[0].message });\r\n    } else {\r\n      delete errors[input.name];\r\n      setErrors(errors);\r\n    }\r\n  };\r\n\r\n  const getNumberOfComments = () => {\r\n    if (comments.length > 1) {\r\n      return `${comments.length} Comments`;\r\n    } else if (comments.length == 1) {\r\n      return `${comments.length} Comment`;\r\n    } else {\r\n      return \"Comment\";\r\n    }\r\n  };\r\n\r\n  const handleCommentDelete = async (id, commentId) => {\r\n    try {\r\n      await postService.deleteComment(id, commentId).then((response) => {\r\n        postService.fetchCommentsByPost(post.id).then((response) => {\r\n          setComments(response.data);\r\n        });\r\n        getNumberOfComments();\r\n      });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        alert(\"Data might have already been deleted\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const editComment = async (id, commentValue) => {\r\n    setForm({\r\n      ...form,\r\n      value: commentValue,\r\n      id: id,\r\n    });\r\n  };\r\n  const isUserComment = (userId, postId, commentId, commentValue) => {\r\n    if (userId === currentUser.id) {\r\n      return (\r\n        <>\r\n          <a\r\n            className=\"edit-ms\"\r\n            onClick={() => editComment(commentId, commentValue)}\r\n          >\r\n            Edit\r\n          </a>\r\n          <a\r\n            aria-disabled=\"true\"\r\n            className=\"delete-ms\"\r\n            onClick={() => handleCommentDelete(postId, commentId)}\r\n          >\r\n            Delete\r\n          </a>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  // console.log(username);\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"container\">\r\n        <div className=\"user\">\r\n          <div className=\"userInfo\">\r\n            {/* For profile of the post owner */}\r\n            <img src={user.imageUrl} alt=\"\" />{\" \"}\r\n            <div className=\"details\">\r\n              <Link\r\n                to={`/profile/${post.userId}`}\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n              >\r\n                {/* For username of the post owner */}\r\n                <span className=\"name\">{user.username}</span>\r\n              </Link>\r\n              <span className=\"date\"></span>\r\n            </div>\r\n          </div>\r\n          <div>{isUser()}</div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <p>{post.value}</p>\r\n          <img src={post.postImageURL} alt=\"\" />\r\n        </div>\r\n        <div className=\"info\">\r\n          <div className=\"item\">\r\n            {liked ? <FavoriteOutlinedIcon /> : <FavoriteBorderOutlinedIcon />}\r\n            {12} Likes\r\n          </div>\r\n          <div className=\"item\" onClick={() => setCommentOpen(!commentOpen)}>\r\n            <TextsmsOutlinedIcon />\r\n            {getNumberOfComments()}\r\n          </div>\r\n          <div className=\"item\">\r\n            <ShareOutlinedIcon />\r\n            Share\r\n          </div>\r\n        </div>\r\n        {/* COmment Start */}\r\n        {commentOpen && (\r\n          <>\r\n            <div className=\"comments\">\r\n              <form onSubmit={handleCommentSubmit} className=\"write\">\r\n                <img src={currentUser.imageUrl} alt=\"\" />\r\n                <input\r\n                  name=\"postId\"\r\n                  onChange={handleChange}\r\n                  value={form.postId}\r\n                  type=\"hidden\"\r\n                />\r\n                <input\r\n                  name=\"value\"\r\n                  onChange={handleChange}\r\n                  value={form.value}\r\n                  type=\"text\"\r\n                  placeholder=\"write a comment\"\r\n                  required\r\n                />\r\n                {form.id ? (\r\n                  <>\r\n                    <input\r\n                      name=\"id\"\r\n                      onChange={handleChange}\r\n                      value={form.id}\r\n                      type=\"hidden\"\r\n                      required\r\n                    />\r\n                    <button type=\"submit\">Update</button>\r\n                  </>\r\n                ) : (\r\n                  <button type=\"submit\">Send</button>\r\n                )}\r\n              </form>\r\n              {comments.map((comment) => (\r\n                <div className=\"comment\">\r\n                  <img src={getImage(comment.userId)} alt=\"\" />\r\n\r\n                  <div className=\"info\">\r\n                    <span>{getUsername(comment.userId)}</span>\r\n                    <p>{comment.value}</p>\r\n                    <small className=\"edit-delete\">\r\n                      {isUserComment(\r\n                        comment.userId,\r\n                        comment.postId,\r\n                        comment.id,\r\n                        comment.value\r\n                      )}\r\n                    </small>\r\n                  </div>\r\n                  <span className=\"date\"></span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}