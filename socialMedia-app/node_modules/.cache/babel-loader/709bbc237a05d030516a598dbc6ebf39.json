{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"autoComplete\", \"autoFocus\", \"className\", \"component\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"id\", \"multiline\", \"name\", \"onClick\", \"onChange\", \"onKeyDown\", \"onKeyUp\", \"onFocus\", \"onBlur\", \"placeholder\", \"readOnly\", \"required\", \"startAdornment\", \"value\", \"type\", \"rows\", \"slotProps\", \"slots\", \"minRows\", \"maxRows\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport isHostComponent from '../utils/isHostComponent';\nimport classes from './inputUnstyledClasses';\nimport useInput from './useInput';\nimport { useSlotProps } from '../utils';\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Input](https://mui.com/base/react-input/)\r\n *\r\n * API:\r\n *\r\n * - [InputUnstyled API](https://mui.com/base/api/input-unstyled/)\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst InputUnstyled = /*#__PURE__*/React.forwardRef(function InputUnstyled(props, forwardedRef) {\n  var _ref, _slots$textarea, _slots$input;\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    autoComplete,\n    autoFocus,\n    className,\n    component,\n    defaultValue,\n    disabled,\n    endAdornment,\n    error,\n    id,\n    multiline = false,\n    name,\n    onClick,\n    onChange,\n    onKeyDown,\n    onKeyUp,\n    onFocus,\n    onBlur,\n    placeholder,\n    readOnly,\n    required,\n    startAdornment,\n    value,\n    type: typeProp,\n    rows,\n    slotProps = {},\n    slots = {},\n    minRows,\n    maxRows\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getInputProps,\n    focused,\n    formControlContext,\n    error: errorState,\n    disabled: disabledState\n  } = useInput({\n    disabled,\n    defaultValue,\n    error,\n    onBlur,\n    onClick,\n    onChange,\n    onFocus,\n    required,\n    value\n  });\n  const type = !multiline ? typeProp != null ? typeProp : 'text' : undefined;\n\n  const ownerState = _extends({}, props, {\n    disabled: disabledState,\n    error: errorState,\n    focused,\n    formControlContext,\n    multiline,\n    type\n  });\n\n  const rootStateClasses = {\n    [classes.disabled]: disabledState,\n    [classes.error]: errorState,\n    [classes.focused]: focused,\n    [classes.formControl]: Boolean(formControlContext),\n    [classes.multiline]: multiline,\n    [classes.adornedStart]: Boolean(startAdornment),\n    [classes.adornedEnd]: Boolean(endAdornment)\n  };\n  const inputStateClasses = {\n    [classes.disabled]: disabledState,\n    [classes.multiline]: multiline\n  };\n  const propsToForward = {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    autoComplete,\n    autoFocus,\n    id,\n    onKeyDown,\n    onKeyUp,\n    name,\n    placeholder,\n    readOnly,\n    type\n  };\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: [classes.root, rootStateClasses, className]\n  });\n  const Input = multiline ? (_slots$textarea = slots.textarea) != null ? _slots$textarea : 'textarea' : (_slots$input = slots.input) != null ? _slots$input : 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: otherHandlers => getInputProps(_extends({}, otherHandlers, propsToForward)),\n    externalSlotProps: slotProps.input,\n    additionalProps: _extends({\n      rows: multiline ? rows : undefined\n    }, multiline && !isHostComponent(Input) && {\n      minRows: rows || minRows,\n      maxRows: rows || maxRows\n    }),\n    ownerState,\n    className: [classes.input, inputStateClasses]\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (multiline) {\n      if (rows) {\n        if (minRows || maxRows) {\n          console.warn('MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [startAdornment, /*#__PURE__*/_jsx(Input, _extends({}, inputProps)), endAdornment]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * @ignore\r\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  'aria-label': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\r\n   * This prop helps users to fill forms faster, especially on mobile devices.\r\n   * The name can be confusing, as it's more like an autofill.\r\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\r\n   */\n  autoComplete: PropTypes.string,\n\n  /**\r\n   * If `true`, the `input` element is focused during the first mount.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Class name applied to the root element.\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\n  defaultValue: PropTypes.any,\n\n  /**\r\n   * If `true`, the component is disabled.\r\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Trailing adornment for this input.\r\n   */\n  endAdornment: PropTypes.node,\n\n  /**\r\n   * If `true`, the `input` will indicate an error by setting the `aria-invalid` attribute on the input and the `Mui-error` class on the root element.\r\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\r\n   */\n  error: PropTypes.bool,\n\n  /**\r\n   * The id of the `input` element.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * Maximum number of rows to display when multiline option is set to true.\r\n   */\n  maxRows: PropTypes.number,\n\n  /**\r\n   * Minimum number of rows to display when multiline option is set to true.\r\n   */\n  minRows: PropTypes.number,\n\n  /**\r\n   * If `true`, a `textarea` element is rendered.\r\n   * @default false\r\n   */\n  multiline: PropTypes.bool,\n\n  /**\r\n   * Name attribute of the `input` element.\r\n   */\n  name: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\r\n   * The short hint displayed in the `input` before the user enters a value.\r\n   */\n  placeholder: PropTypes.string,\n\n  /**\r\n   * It prevents the user from changing the value of the field\r\n   * (not from interacting with the field).\r\n   */\n  readOnly: PropTypes.bool,\n\n  /**\r\n   * If `true`, the `input` element is required.\r\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * Number of rows to display when multiline option is set to true.\r\n   */\n  rows: PropTypes.number,\n\n  /**\r\n   * The props used for each slot inside the Input.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\r\n   * The components used for each slot inside the InputBase.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    textarea: PropTypes.elementType\n  }),\n\n  /**\r\n   * Leading adornment for this input.\r\n   */\n  startAdornment: PropTypes.node,\n\n  /**\r\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\r\n   * @default 'text'\r\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['button', 'checkbox', 'color', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week']),\n\n  /**\r\n   * The value of the `input` element, required for a controlled component.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default InputUnstyled;","map":{"version":3,"sources":["C:/Users/RRAMIREZ/Documents/REACT/socialMedia-main/socialMedia-app/node_modules/@mui/base/InputUnstyled/InputUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","isHostComponent","classes","useInput","useSlotProps","jsx","_jsx","jsxs","_jsxs","InputUnstyled","forwardRef","props","forwardedRef","_ref","_slots$textarea","_slots$input","ariaDescribedby","ariaLabel","ariaLabelledby","autoComplete","autoFocus","className","component","defaultValue","disabled","endAdornment","error","id","multiline","name","onClick","onChange","onKeyDown","onKeyUp","onFocus","onBlur","placeholder","readOnly","required","startAdornment","value","type","typeProp","rows","slotProps","slots","minRows","maxRows","other","getRootProps","getInputProps","focused","formControlContext","errorState","disabledState","undefined","ownerState","rootStateClasses","formControl","Boolean","adornedStart","adornedEnd","inputStateClasses","propsToForward","Root","root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","ref","Input","textarea","input","inputProps","otherHandlers","process","env","NODE_ENV","console","warn","children","propTypes","string","bool","node","any","number","func","shape","oneOfType","object","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"autoComplete\", \"autoFocus\", \"className\", \"component\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"id\", \"multiline\", \"name\", \"onClick\", \"onChange\", \"onKeyDown\", \"onKeyUp\", \"onFocus\", \"onBlur\", \"placeholder\", \"readOnly\", \"required\", \"startAdornment\", \"value\", \"type\", \"rows\", \"slotProps\", \"slots\", \"minRows\", \"maxRows\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport isHostComponent from '../utils/isHostComponent';\r\nimport classes from './inputUnstyledClasses';\r\nimport useInput from './useInput';\r\nimport { useSlotProps } from '../utils';\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Input](https://mui.com/base/react-input/)\r\n *\r\n * API:\r\n *\r\n * - [InputUnstyled API](https://mui.com/base/api/input-unstyled/)\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst InputUnstyled = /*#__PURE__*/React.forwardRef(function InputUnstyled(props, forwardedRef) {\r\n  var _ref, _slots$textarea, _slots$input;\r\n  const {\r\n      'aria-describedby': ariaDescribedby,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledby,\r\n      autoComplete,\r\n      autoFocus,\r\n      className,\r\n      component,\r\n      defaultValue,\r\n      disabled,\r\n      endAdornment,\r\n      error,\r\n      id,\r\n      multiline = false,\r\n      name,\r\n      onClick,\r\n      onChange,\r\n      onKeyDown,\r\n      onKeyUp,\r\n      onFocus,\r\n      onBlur,\r\n      placeholder,\r\n      readOnly,\r\n      required,\r\n      startAdornment,\r\n      value,\r\n      type: typeProp,\r\n      rows,\r\n      slotProps = {},\r\n      slots = {},\r\n      minRows,\r\n      maxRows\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    focused,\r\n    formControlContext,\r\n    error: errorState,\r\n    disabled: disabledState\r\n  } = useInput({\r\n    disabled,\r\n    defaultValue,\r\n    error,\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    required,\r\n    value\r\n  });\r\n  const type = !multiline ? typeProp != null ? typeProp : 'text' : undefined;\r\n  const ownerState = _extends({}, props, {\r\n    disabled: disabledState,\r\n    error: errorState,\r\n    focused,\r\n    formControlContext,\r\n    multiline,\r\n    type\r\n  });\r\n  const rootStateClasses = {\r\n    [classes.disabled]: disabledState,\r\n    [classes.error]: errorState,\r\n    [classes.focused]: focused,\r\n    [classes.formControl]: Boolean(formControlContext),\r\n    [classes.multiline]: multiline,\r\n    [classes.adornedStart]: Boolean(startAdornment),\r\n    [classes.adornedEnd]: Boolean(endAdornment)\r\n  };\r\n  const inputStateClasses = {\r\n    [classes.disabled]: disabledState,\r\n    [classes.multiline]: multiline\r\n  };\r\n  const propsToForward = {\r\n    'aria-describedby': ariaDescribedby,\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledby,\r\n    autoComplete,\r\n    autoFocus,\r\n    id,\r\n    onKeyDown,\r\n    onKeyUp,\r\n    name,\r\n    placeholder,\r\n    readOnly,\r\n    type\r\n  };\r\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    getSlotProps: getRootProps,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      ref: forwardedRef\r\n    },\r\n    ownerState,\r\n    className: [classes.root, rootStateClasses, className]\r\n  });\r\n  const Input = multiline ? (_slots$textarea = slots.textarea) != null ? _slots$textarea : 'textarea' : (_slots$input = slots.input) != null ? _slots$input : 'input';\r\n  const inputProps = useSlotProps({\r\n    elementType: Input,\r\n    getSlotProps: otherHandlers => getInputProps(_extends({}, otherHandlers, propsToForward)),\r\n    externalSlotProps: slotProps.input,\r\n    additionalProps: _extends({\r\n      rows: multiline ? rows : undefined\r\n    }, multiline && !isHostComponent(Input) && {\r\n      minRows: rows || minRows,\r\n      maxRows: rows || maxRows\r\n    }),\r\n    ownerState,\r\n    className: [classes.input, inputStateClasses]\r\n  });\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (multiline) {\r\n      if (rows) {\r\n        if (minRows || maxRows) {\r\n          console.warn('MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\r\n    children: [startAdornment, /*#__PURE__*/_jsx(Input, _extends({}, inputProps)), endAdornment]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? InputUnstyled.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-describedby': PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-label': PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-labelledby': PropTypes.string,\r\n  /**\r\n   * This prop helps users to fill forms faster, especially on mobile devices.\r\n   * The name can be confusing, as it's more like an autofill.\r\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\r\n   */\r\n  autoComplete: PropTypes.string,\r\n  /**\r\n   * If `true`, the `input` element is focused during the first mount.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Class name applied to the root element.\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\r\n  defaultValue: PropTypes.any,\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Trailing adornment for this input.\r\n   */\r\n  endAdornment: PropTypes.node,\r\n  /**\r\n   * If `true`, the `input` will indicate an error by setting the `aria-invalid` attribute on the input and the `Mui-error` class on the root element.\r\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\r\n   */\r\n  error: PropTypes.bool,\r\n  /**\r\n   * The id of the `input` element.\r\n   */\r\n  id: PropTypes.string,\r\n  /**\r\n   * Maximum number of rows to display when multiline option is set to true.\r\n   */\r\n  maxRows: PropTypes.number,\r\n  /**\r\n   * Minimum number of rows to display when multiline option is set to true.\r\n   */\r\n  minRows: PropTypes.number,\r\n  /**\r\n   * If `true`, a `textarea` element is rendered.\r\n   * @default false\r\n   */\r\n  multiline: PropTypes.bool,\r\n  /**\r\n   * Name attribute of the `input` element.\r\n   */\r\n  name: PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onKeyDown: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onKeyUp: PropTypes.func,\r\n  /**\r\n   * The short hint displayed in the `input` before the user enters a value.\r\n   */\r\n  placeholder: PropTypes.string,\r\n  /**\r\n   * It prevents the user from changing the value of the field\r\n   * (not from interacting with the field).\r\n   */\r\n  readOnly: PropTypes.bool,\r\n  /**\r\n   * If `true`, the `input` element is required.\r\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\r\n   */\r\n  required: PropTypes.bool,\r\n  /**\r\n   * Number of rows to display when multiline option is set to true.\r\n   */\r\n  rows: PropTypes.number,\r\n  /**\r\n   * The props used for each slot inside the Input.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the InputBase.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    input: PropTypes.elementType,\r\n    root: PropTypes.elementType,\r\n    textarea: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * Leading adornment for this input.\r\n   */\r\n  startAdornment: PropTypes.node,\r\n  /**\r\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\r\n   * @default 'text'\r\n   */\r\n  type: PropTypes /* @typescript-to-proptypes-ignore */.oneOf(['button', 'checkbox', 'color', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week']),\r\n  /**\r\n   * The value of the `input` element, required for a controlled component.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default InputUnstyled;"]},"metadata":{},"sourceType":"module"}